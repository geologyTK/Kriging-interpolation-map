library(sp)
library(gstat)
library(automap)
library(dplyr)
library(viridis);
library(ggplot2)
library(ggnewscale)
library(rgdal)
library(readxl)
library("writexl")
library(raster)
library(leaflet)
library(mapview)

#open the backgorund map from SHP file
Kinsmanmap <- readOGR("Kinsman.shp")
plot(Kinsmanmap)
dataPT<-read_excel("xxxxxxxx")
datawithPT<-filter(dataPT,  AveGrtonlyP >0)
datawithoutPT<-filter(dataPT, is.na(AveGrtonlyP))

#Interpolate AveGrtonlyP
datawithoutPT.frame<-data.frame(Sample=c(datawithoutPT$Sample),
               longitude=c(round(datawithoutPT$Longitude, 2)),
               latitude= c(round(datawithoutPT$Latitude, 2)),
               Pressure=(datawithoutPT$AveGrtonlyP),
               Temperature=(datawithoutPT$AveGBT))

df<-data.frame(x=c(datawithPT$Longitude),
               y= c(datawithPT$Latitude),
               Pressure=(datawithPT$AveGrtonlyP),
               Temperature=(datawithPT$AveGBT))

coordinates(df) <- ~ x + y
#proj4string(df) <- CRS("+init=epsg:4326") # Set the projection. They were latitude and longitude, so use WGS84 long-lat projection

#grdd <- spsample(df, type = "regular", n = 30000)
#colnames(grdd@coords) <- c("x", "y")        # rename coords as in data
#gridded(grdd) <- TRUE

#########################################
#. Determine the origin point for grid coordination and set the range of plotting map
# Set the origin point
ori <- SpatialPoints(expand.grid(longitude=-72,latitude= 43), proj4string =  CRS("+init=epsg:4326")) #WGS84 
# Convert the projection of ori
ori_t <- spTransform(ori, CRSobj = CRS("+init=epsg:4326")) #using WSG 84
coordinates(ori_t) #check the epsg 4326 coordinates

######4. Determine the extent of the grid
# The origin has been rounded to the nearest 100
x_ori <- round(coordinates(ori_t)[1, 1]/10) * 10-2.4 #using this if applying EPSG3857
y_ori <- round(coordinates(ori_t)[1, 2]/10) * 10+2.75 #using this if applying EPSG3857

# Define how many cells for x-longitude and y-latitude axis

#Set the cell
x_cell <- 200
y_cell <- 350
cell_size <- 0.005 # Define the resolution to be 1000 meters

# Create the extent
ext <- extent(x_ori, x_ori + (x_cell * cell_size), y_ori, y_ori + (y_cell * cell_size)) 
ras <- raster(ext)

# Set the resolution
res(ras) <- c(cell_size, cell_size)
ras[] <- 0
#projection(ras) <- CRS("+init=epsg:4326") # Project the raster

# Convert to spatial pixel
# to use the kriging functions from the package gstat, we need to convert the raster to SpatialPixels.
PT.frame_grid <- rasterToPoints(ras, spatial = TRUE)
gridded(PT.frame_grid) <- TRUE
#proj4string(PT.frame_grid) <- CRS("+init=epsg:4326") # Set the projection. They were latitude and longitude, so use WGS84 long-lat projection

#mapview(PT.frame_grid)+mapview(df) #checking the region of grid is right or not
#mapview(PT.frame_grid)
##################################################################################

#kriging_kinsman1 <- autoKrige(Pressure~1, df, grdd) #ordinary kriging formula
#method
form1 <- as.formula("Pressure ~ x + y")       # universal kriging formula assuming n has a trend with long-lat
form2 <- as.formula("Temperature ~ x + y")       # universal kriging formula assuming n has a trend with long-lat

newdf<-data.frame(x=c(datawithPT$Longitude),
               y= c(datawithPT$Latitude),
               Pressure=(datawithPT$AveGrtonlyP),
               Temperature=(datawithPT$AveGBT))

newdf <- na.omit(object = newdf)
coordinates(newdf) <- ~ x + y

kriging_kinsman.pressure <- autoKrige(formula = form1, df, PT.frame_grid) #universal kriging formula
kriging_kinsman.temperature <- autoKrige(formula = form2, newdf, PT.frame_grid) #oridinary kriging formula, because there is no spatial trend with temperature

kriging_kinsman.pressure$krige_output$var1.pred #var1 is the predicted value
kriging_kinsman.temperature$krige_output$var1.pred #var1 is the predicted value

#making a dataframe for ggplot plot
#If the pressure and temperature use different method, the predcited pressure and temperature variables would be different
Kinsman.predict<-data.frame(Pressure=c(kriging_kinsman.pressure$krige_output$var1.pred), 
                            Pressure.error=c(kriging_kinsman.pressure$krige_output$var1.stdev),
                            Temperature=c(kriging_kinsman.temperature$krige_output$var1.pred),
                            Temperature.error=c(kriging_kinsman.temperature$krige_output$var1.stdev),
                            longitude=c(round(kriging_kinsman.pressure$krige_output$x,2)),
                            latitude=c(round(kriging_kinsman.pressure$krige_output$y,2))
                            )


#ploting the predicted pressure map with contour
ggplot()+geom_point(data=Kinsman.predict,aes(x=longitude, y=latitude, color =Pressure),shape=15, size=7,alpha=0.8)+
  scale_color_viridis(begin = 0, end = 1) +
  scale_colour_viridis(option="magma", direction = -1, begin = 0.4, end = 1)+
  #scale_colour_gradientn(colours = c("darkred", "yellow",limit=c(1,8)))+
  new_scale_color()+geom_point(data=datawithPT, aes(x=Longitude, y=Latitude), color="white", shape=16, size = 3)+scale_color_viridis()+
  new_scale_color()+geom_point(data=datawithoutPT, aes(x=Longitude, y=Latitude), color="skyblue", shape=16, size = 3)+scale_color_viridis()+
  geom_contour(data=Kinsman.predict, aes(x=longitude, y=latitude, z = Pressure), linetype = "solid",
             color = "white", size = 0.5) +
  geom_polygon(data = Kinsmanmap, aes(x = long, y = lat, group = group), colour = "black", fill = NA)

  ggsave("Fig. Pressure map.jpg", width=50, heigh=35, units = "cm")

